---
import Layout from "../layouts/Layout.astro";
import Titlebar from "../components/Titlebar.astro";
import Button from "../components/Button.astro";
import Modal from "../components/Modal.astro";
import "../styles/style.css";
---

<Layout>
    <div class="container">
        <h1>Projects</h1>
        <div id="project-list">
            <!-- Project items will be rendered here -->
        </div>
        <a onclick="document.getElementById('addPopup').showModal()"
            ><Button>add project</Button></a
        >
    </div>
    <Modal id="addPopup">
        <div>
            <h2>Create project</h2>
            <div>
                <form id="create-project-form">
                    <input id="projectName" type="text" style=" border-radius: 5px; margin: 20px; border: 2px solid teal;" placeholder="Project name">
                    <br>
                    <button
                        class="close-btn"
                        onclick="this.closest('dialog').close()"
                        style="background: none;border: none;cursor: pointer;padding: 1.5rem;color: var(--crimson-red);}"
                        >Cancel</button
                    >
                    <Button id="confirm-button">Confirm</Button>
                </form>
            </div>
        </div>
    </Modal>
</Layout>

<script>
    import { chorusAPI } from "../lib/sdk.js";
    import { navigate } from "astro:transitions/client";

    document.addEventListener("astro:page-load", () => {
        chorusAPI
            .isLoggedIn()
            .then((isLoggedIn) => {
                if (!isLoggedIn) {
                    window.location.href = "/login";
                }
            })
            .catch((error) => {
                console.error("Dashboard: Error checking login status:", error);
            });

        chorusAPI
            .getUserProjects()
            .then((response) => {
                const projectList = document.getElementById("project-list");
                projectList.innerHTML = ""; // Clear existing content

                if (response.projects.length === 0) {
                    projectList.innerHTML = "<p>No projects found.</p>";
                    return;
                }

                response.projects.forEach((project) => {
                    const projectItem = document.createElement("div");
                    projectItem.className = "project-item";
                    projectItem.innerHTML = `
                        <h2>${project.name}</h2>
                        <p>${project.description}</p>
                        <a href="/project?project_id=${project.project_id}">View Project</a>
                    `;
                    projectList.appendChild(projectItem);
                });
            })
            .catch((error) => {
                console.error("Dashboard: Error fetching projects:", error);
            });

        document.getElementById("create-project-form")?.addEventListener("submit", (event) =>{
            event.preventDefault();
            let name = document.getElementById("projectName")?.value;
            alert(name);
        });
    });
</script>

<style is:global>
    .container {
        padding: 20px;
        top: 0px;
    }

    #project-list {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .project-item {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background-color: var(--misty-aqua);
        padding: 15px; /* Add padding */
        border-radius: 8px; /* Add rounded corners */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Optional: Add a subtle shadow */
        width: 100%; /* Full width */
        max-width: 300px; /* Optional: Limit width */
    }

    /* Optional: Style the link inside the project item */
    .project-item a {
        display: inline-block; /* Allows margin/padding */
        margin-top: 10px;
        text-decoration: none;
        color: var(--deep-teal); /* Use a theme color */
        font-weight: bold;
    }

    .project-item a:hover {
        text-decoration: underline;
    }
</style>
